#!/bin/sh

GAFFER="/usr/bin/gaffer"
LOGPATH="/dev/ttyS0"

# set global ulimits TODO move to /etc/limits.conf
ulimit -n 1048576
ulimit -p unlimited

# Remount onboot containers as rw
if [ -d /containers ]
then
	for f in $(find /containers -mindepth 2 -maxdepth 2 | sort)
  do
    echo "Mounting $f/rootfs" > $LOGPATH
		/bin/mount --bind "$f/rootfs" "$f/rootfs"
		mount -o remount,rw "$f/rootfs"
		#service start "$(basename $f)"
	done
fi


# Run each onboot container to completion
$GAFFER --log=$LOGPATH init --once /containers/onboot

# Loading all of the service containers into tmpfs
# utilizes way too much memory on cheaper EC2 instances
# like T2 or M3. We want to save as much memory as possible
# for running our applications. If there is a disk mounted 
# below /var/external we will move all the service containers
# from tmpfs to here. 
EXT_MOUNT="/var/external"
SERVICES_PATH="/containers/services"


echo "Checking to see if there is an external volume" > $LOGPATH
[[ -d "$EXT_MOUNT" ]] && {
  echo "Moving services containers from $SERVICES_PATH to $EXT_MOUNT to save memory" > $LOGPATH
  # Remove anything already on the disk
  rm -rf "$EXT_MOUNT/"
  # Move services rootfs on the device
  mv -v "$SERVICES_PATH" "$EXT_MOUNT"
  SERVICES_PATH="$EXT_MOUNT/services"
}

echo "Launching Gaffer" > $LOGPATH

$GAFFER --log=$LOGPATH init "$SERVICES_PATH" &

echo "Launching Gaffer UI" > $LOGPATH

$GAFFER --log=$LOGPATH server &

